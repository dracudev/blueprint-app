// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  name            String   @db.VarChar(100)
  email           String   @unique @db.VarChar(100)
  password        String   @db.VarChar(255)
  role            Role     @default(registered)
  profile_picture String?  @map("profile_picture") @db.VarChar(255)
  created_at      DateTime @default(now()) @map("created_at")

  @@map("users")
}

model Client {
  clientId        Int      @id @default(autoincrement()) @map("client_id")
  isCompany       Boolean  @map("is_company")
  companyName     String?  @map("company_name") @db.VarChar(255)
  firstName       String?  @map("first_name") @db.VarChar(100)
  lastName        String?  @map("last_name") @db.VarChar(100)
  email           String   @db.VarChar(255)
  phone           String?  @db.VarChar(50)
  billingAddress  String?  @map("billing_address") @db.Text

  // Relations
  orders          Order[]

  @@index([email], map: "idx_client_email")
  @@map("Clients")
}

model Order {
  orderId       Int         @id @default(autoincrement()) @map("order_id")
  clientId      Int         @map("client_id")
  createdAt     DateTime    @default(now()) @map("created_at")
  jobStatus     JobStatus   @default(RECEIVED) @map("job_status")
  totalAmount   Decimal     @default(0.00) @map("total_amount") @db.Decimal(10, 2)

  // Relations
  client        Client      @relation(fields: [clientId], references: [clientId])
  orderItems    OrderItem[]
  payments      Payment[]

  @@map("Orders")
}

model Product {
  productId     Int         @id @default(autoincrement()) @map("product_id")
  productName   String      @map("product_name") @db.VarChar(255)

  // Relations
  orderItems    OrderItem[]

  @@map("Products")
}

model OrderItem {
  orderItemId   Int         @id @default(autoincrement()) @map("order_item_id")
  orderId       Int         @map("order_id")
  productId     Int         @map("product_id")
  quantity      Int
  unitPrice     Decimal     @map("unit_price") @db.Decimal(10, 2)

  // Relations
  order         Order       @relation(fields: [orderId], references: [orderId])
  product       Product     @relation(fields: [productId], references: [productId])

  @@map("OrderItems")
}

model Payment {
  paymentId     Int           @id @default(autoincrement()) @map("payment_id")
  orderId       Int           @map("order_id")
  paymentStatus PaymentStatus @default(UNPAID) @map("payment_status")
  paidAmount    Decimal       @default(0.00) @map("paid_amount") @db.Decimal(10, 2)
  paymentDate   DateTime      @default(now()) @map("payment_date")

  // Relations
  order         Order         @relation(fields: [orderId], references: [orderId])

  @@map("Payments")
}

// Enums
enum Role {
  public
  registered
  admin
}

enum JobStatus {
  RECEIVED     @map("Received")
  IN_PROGRESS  @map("In Progress")
  COMPLETED    @map("Completed")
  DELIVERED    @map("Delivered")
}

enum PaymentStatus {
  PAID            @map("Paid")
  PARTIALLY_PAID  @map("Partially Paid")
  UNPAID          @map("Unpaid")
}
