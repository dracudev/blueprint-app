generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(100)
  email      String   @unique @db.VarChar(100)
  password   String   @db.VarChar(255)
  role       Role     @default(registered)
  created_at DateTime @default(now()) @map("created_at")

  @@map("users")
}

model Client {
  clientId       Int     @id @default(autoincrement()) @map("client_id")
  isCompany      Boolean @map("is_company")
  companyName    String? @map("company_name") @db.VarChar(255)
  firstName      String? @map("first_name") @db.VarChar(100)
  lastName       String? @map("last_name") @db.VarChar(100)
  email          String  @unique @db.VarChar(255)
  phone          String? @db.VarChar(50)
  billingAddress String? @map("billing_address") @db.Text

  // Relations
  projects Project[]

  @@index([email], map: "idx_client_email")
  @@map("Clients")
}

model Project {
  projectId   Int       @id @default(autoincrement()) @map("project_id")
  clientId    Int       @map("client_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  jobStatus   JobStatus @default(RECEIVED) @map("job_status")
  totalAmount Decimal   @default(0.00) @map("total_amount") @db.Decimal(10, 2)

  // Relations
  client       Client        @relation(fields: [clientId], references: [clientId])
  projectItems ProjectItem[]
  payments     Payment[]

  @@map("Projects")
}

model Service {
  serviceId   Int    @id @default(autoincrement()) @map("service_id")
  serviceName String @map("service_name") @db.VarChar(255)

  // Relations
  projectItems ProjectItem[]

  @@map("Services")
}

model ProjectItem {
  projectItemId Int     @id @default(autoincrement()) @map("project_item_id")
  projectId     Int     @map("project_id")
  serviceId     Int     @map("service_id")
  quantity      Int
  unitPrice     Decimal @map("unit_price") @db.Decimal(10, 2)

  // Relations
  project Project @relation(fields: [projectId], references: [projectId])
  service Service @relation(fields: [serviceId], references: [serviceId])

  @@map("ProjectItems")
}

model Payment {
  paymentId     Int           @id @default(autoincrement()) @map("payment_id")
  projectId     Int           @map("project_id")
  paymentStatus PaymentStatus @default(UNPAID) @map("payment_status")
  paidAmount    Decimal       @default(0.00) @map("paid_amount") @db.Decimal(10, 2)
  paymentDate   DateTime      @default(now()) @map("payment_date")

  // Relations
  project Project @relation(fields: [projectId], references: [projectId])

  @@map("Payments")
}

// Enums
enum Role {
  registered
  client
  admin
}

enum JobStatus {
  RECEIVED    @map("Received")
  IN_PROGRESS @map("In Progress")
  COMPLETED   @map("Completed")
  DELIVERED   @map("Delivered")
}

enum PaymentStatus {
  PAID           @map("Paid")
  PARTIALLY_PAID @map("Partially Paid")
  UNPAID         @map("Unpaid")
}
