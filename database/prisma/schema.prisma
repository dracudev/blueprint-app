generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(100)
  email      String    @unique @db.VarChar(100)
  password   String    @db.VarChar(255)
  role       String?   @default("registered") @db.VarChar(20)
  created_at DateTime? @default(now()) @map("created_at") @db.Timestamp(6)

  @@map("users")
}

model clients {
  client_id       Int        @id @default(autoincrement())
  is_company      Boolean
  company_name    String?    @db.VarChar(255)
  first_name      String?    @db.VarChar(100)
  last_name       String?    @db.VarChar(100)
  email           String     @unique @db.VarChar(255)
  phone           String?    @db.VarChar(50)
  billing_address String?
  projects        projects[]

  @@index([email], map: "idx_client_email")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model payments {
  payment_id     Int       @id @default(autoincrement())
  project_id     Int
  payment_status String?   @default("Unpaid") @db.VarChar(20)
  paid_amount    Decimal?  @default(0.00) @db.Decimal(10, 2)
  payment_date   DateTime? @default(now()) @db.Timestamp(6)
  projects       projects  @relation(fields: [project_id], references: [project_id], onDelete: Cascade, onUpdate: NoAction)
}

model project_items {
  project_item_id Int      @id @default(autoincrement())
  project_id      Int
  service_id      Int
  quantity        Int
  unit_price      Decimal  @db.Decimal(10, 2)
  projects        projects @relation(fields: [project_id], references: [project_id], onDelete: Cascade, onUpdate: NoAction)
  services        services @relation(fields: [service_id], references: [service_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model projects {
  project_id    Int             @id @default(autoincrement())
  client_id     Int
  created_at    DateTime?       @default(now()) @db.Timestamp(6)
  job_status    String?         @default("Received") @db.VarChar(20)
  total_amount  Decimal?        @default(0.00) @db.Decimal(10, 2)
  payments      payments[]
  project_items project_items[]
  clients       clients         @relation(fields: [client_id], references: [client_id], onDelete: Cascade, onUpdate: NoAction)
}

model services {
  service_id    Int             @id @default(autoincrement())
  service_name  String          @db.VarChar(255)
  description   String?
  price         Decimal         @default(0.00) @db.Decimal(10, 2)
  project_items project_items[]
}
